AWSTemplateFormatVersion: "2010-09-09"

Description: VPC, S3 bucket, IAM, DBSubnet for Kubernetes cluster.

Parameters:
  Network:
    Description: "Network/16 from CIDR VPC blocks 10.0.0.0/8. Should be unique across all deployment. Example: 10.2"
    Type: String
    AllowedPattern: '((\d{1,3})\.)\d{1,3}'
  KubernetesDNS:
    Type: String
    Description: Hosted zone for Kubernetes DNS.
  Environment:
    Description: Uses for resource tagging and select appropriate Policy for VPC Peering acknowledge
    Type: String
    AllowedValues:
      - dev
      - prod
  LoggerAccessKeyRotation:
    Type: Number
    Description: Incrementing this value notifies AWS CloudFormation that you want to rotate your access key.
    Default: 0

Resources:
  ClusterStateStorage:
    Type: "AWS::S3::Bucket"
    Properties:
      BucketName: !Join ["-", [ !Ref "AWS::AccountId", "k8s-clst-state", !Ref "AWS::StackName", !Ref "AWS::Region"]]
      LifecycleConfiguration:
        Rules:
          - Id: RemoveOldNonCurrent
            NoncurrentVersionExpirationInDays: 720
            Status: Enabled
      VersioningConfiguration:
        Status: Enabled
      Tags:
        - Key: ProductComponents
          Value: S3
        - Key: Environment
          Value: !Join ["-", [!Ref Environment, !Ref "AWS::Region"]]

  LogsStorage:
    Type: "AWS::S3::Bucket"
    Properties:
      BucketName: !Join ["-", [ !Ref "AWS::AccountId", "k8s-clst-state", !Ref "AWS::StackName", !Ref "AWS::Region", "logs"]]
      Tags:
        - Key: ProductComponents
          Value: Logs
        - Key: Environment
          Value: !Join ["-", [!Ref Environment, !Ref "AWS::Region"]]

  VPC:
    Type: "AWS::EC2::VPC"
    Properties:
      CidrBlock: !Join  ["",[!Ref Network, ".0.0/16"]]
      EnableDnsSupport: 'true'
      EnableDnsHostnames: 'true'
      Tags:
        - Key: Name
          Value: "k8s-cluster"
        - Key: ProductComponents
          Value: VPC
        - Key: Environment
          Value: !Join ["-", [!Ref Environment, !Ref "AWS::Region"]]

  IGW:
    Type: "AWS::EC2::InternetGateway"
    Properties:
      Tags:
        - Key: Name
          Value: "k8s-cluster"
        - Key: Product
          Value: "Kubernetes-cluster"
        - Key: ProductComponents
          Value: VPC
        - Key: Environment
          Value: !Join ["-", [!Ref Environment, !Ref "AWS::Region"]]

  RouteTablePublic:
    Type: "AWS::EC2::RouteTable"
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: "k8s-cluster-public"
        - Key: ProductComponents
          Value: VPC
        - Key: Environment
          Value: !Join ["-", [!Ref Environment, !Ref "AWS::Region"]]

  GatewayAttach:
    Type: "AWS::EC2::VPCGatewayAttachment"
    Properties:
      InternetGatewayId: !Ref IGW
      VpcId: !Ref VPC

  DefaultRoute:
    Type: "AWS::EC2::Route"
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref IGW
      RouteTableId: !Ref RouteTablePublic

  VPCEndpointS3:
    Type: "AWS::EC2::VPCEndpoint"
    Properties:
      RouteTableIds:
        - !Ref RouteTablePublic
      ServiceName: !Join [".", ["com.amazonaws", !Ref 'AWS::Region', "s3"]]
      VpcId: !Ref VPC

  ELBCertificate:
    Type: "AWS::CertificateManager::Certificate"
    Properties:
      DomainName: !Join ["", ["*.", !Ref KubernetesDNS]]
      ValidationMethod: DNS
      SubjectAlternativeNames:
        - !Ref KubernetesDNS
      DomainValidationOptions:
        - DomainName: !Ref KubernetesDNS
          ValidationDomain: !Ref KubernetesDNS
        - DomainName: !Join ["", ["*.", !Ref KubernetesDNS]]
          ValidationDomain: !Ref KubernetesDNS
      Tags:
        - Key: ProductComponents
          Value: Certificate
        - Key: Environment
          Value:  !Join ["-", [!Ref Environment, !Ref "AWS::Region"]]
        - Key: Name
          Value: Kubernetes-cluster

  LoggerUser:
    Type: "AWS::IAM::User"
    Properties:
      Path: "/"
      Policies:
      - PolicyName: writelogs
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
            -
              Effect: "Allow"
              Action: "s3:ListBucket"
              Resource: !Join ["", ["arn:aws:s3:::", !Ref LogsStorage]]
            -
              Effect: "Allow"
              Action: "s3:PutObject"
              Resource: !Join ["", ["arn:aws:s3:::", !Ref LogsStorage, "/*"]]
      - PolicyName: VisualEditor0
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: "Allow"
              Action:
              - "cloudwatch:GetMetricData"
              - "cloudwatch:GetMetricStatistics"
              - "cloudwatch:ListMetrics"
              Resource: "*"
      UserName: !Join ["-", ["k8s-logger", !Ref "AWS::StackName", !Ref KubernetesDNS, !Ref "AWS::Region"]]

  LoggerUserAccessKey:
    Type: "AWS::IAM::AccessKey"
    Properties:
      Serial: !Ref LoggerAccessKeyRotation
      Status: Active
      UserName: !Ref LoggerUser

  LogsBucketPolicy:
    Type: "AWS::S3::BucketPolicy"
    Properties:
      Bucket: !Ref LogsStorage
      PolicyDocument:
        Statement:
          - Sid: AccessFromSnowcoListBucket
            Action:
              - "s3:List*"
            Effect: Allow
            Resource:
              - !Join ["", ["arn:aws:s3:::", Ref: "LogsStorage"] ]
            Principal:
              AWS: "arn:aws:iam::722777194664:root"

          - Sid: AccessFromSnowcoGetObject
            Action:
              - "s3:Get*"
              - "s3:List*"
            Effect: Allow
            Resource:
              - !Join ["", ["arn:aws:s3:::", Ref: "LogsStorage",  "/*" ]]
            Principal:
              AWS: "arn:aws:iam::722777194664:root"

Outputs:
  VPCID:
    Value: !Ref VPC
  ClusterStateStorage:
    Value: !Join ["/", ["s3:/", !Ref ClusterStateStorage]]
  LogsStorage:
    Value: !Ref LogsStorage
  ELBCertificate:
    Value: !Ref ELBCertificate
  LoggerAccessKeyId:
    Value: !Ref LoggerUserAccessKey
  LoggerSecretAccessKey:
    Value: !GetAtt LoggerUserAccessKey.SecretAccessKey
