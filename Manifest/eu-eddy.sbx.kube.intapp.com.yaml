apiVersion: kops/v1alpha2
kind: Cluster
metadata:
  creationTimestamp: null
  name: eddy.eu.sbx.kube.intapp.com
spec:
  api:
    loadBalancer:
      type: Public
      UseForInternalApi: true
  authorization:
    rbac: {}
  kubeAPIServer:
    runtimeConfig:
      # workaround for https://github.com/kelseyhightower/kubernetes-the-hard-way/issues/276
      # kops run api-server with --admission-control=Initializers
      admissionregistration.k8s.io/v1alpha1: "true"
    oidcIssuerURL: https://keycloak.intapp.com/auth/realms/master
    oidcClientID: k8s-dev     # OIDC client in Keycloak master realm
    oidcUsernameClaim: email
    oidcGroupsClaim: groups
    # audit logs
    auditLogPath: /var/log/kube-apiserver-audit.log
    auditLogMaxAge: 10
    auditLogMaxBackups: 1
    auditLogMaxSize: 100
    auditPolicyFile: /srv/kubernetes/audit.yaml
  sshAccess:
    - 81.130.156.208
  channel: stable
  cloudLabels:
    Environment: DEV
    ProductComponents: EC2
    Product: Kubernetes-cluster
    Team: DevOps
    Contact: eddy.snow@intapp.com
  cloudProvider: aws
  configBase: s3://k8s-clusterstatestorage-eddy-k8s-environment-eu-west-1/eddy.eu.sbx.kube.intapp.com
  dnsZone: ZLWYXWU2XPOKZ
  etcdClusters:
  - etcdMembers:
    - encryptedVolume: true
      instanceGroup: master-eu-west-1a
      name: a
#    - encryptedVolume: true
#      instanceGroup: master-eu-west-1b
#      name: b
#    - encryptedVolume: true
#      instanceGroup: master-eu-west-1c
#      name: c
    name: main
  - etcdMembers:
    - encryptedVolume: true
      instanceGroup: master-eu-west-1a
      name: a
#    - encryptedVolume: true
#      instanceGroup: master-eu-west-1b
#      name: b
#    - encryptedVolume: true
#      instanceGroup: master-eu-west-1c
#      name: c
    name: events
  iam:
    allowContainerRegistry: true
    legacy: false
  kubernetesApiAccess:
    - 0.0.0.0/0
    #- 62.244.53.18/32   # Kiev
    #- 38.104.140.214/32 # Palo Alto
    #- 81.130.156.208/32 # Manchester  https://www.intapp.com/wiki/display/CE/Team+Members
    #- 194.74.204.218/32 # London
    #- 149.14.94.106/32  # London
    #- 93.126.83.52/32   # Sergii Temp
#  kubernetesVersion: 1.9.10
  kubernetesVersion: 1.10.12
  masterPublicName: api-eddy.eu.sbx.kube.intapp.com
#  masterInternalName: api-eddy.eu.sbx.kube.intapp.com
  networkCIDR: 10.10.0.0/16
  networkID: vpc-0f647c5f415705a11
  networking:
    canal: {}
  nonMasqueradeCIDR: 100.64.0.0/10
  sshAccess:
  - 0.0.0.0/0
  subnets:
  - cidr: 10.10.32.0/19
    name: eu-west-1a
    type: Private
    zone: eu-west-1a
  - cidr: 10.10.64.0/19
    name: eu-west-1b
    type: Private
    zone: eu-west-1b
  - cidr: 10.10.96.0/19
    name: eu-west-1c
    type: Private
    zone: eu-west-1c
  - cidr: 10.10.0.0/22
    name: utility-eu-west-1a
    type: Utility
    zone: eu-west-1a
  - cidr: 10.10.4.0/22
    name: utility-eu-west-1b
    type: Utility
    zone: eu-west-1b
  - cidr: 10.10.8.0/22
    name: utility-eu-west-1c
    type: Utility
    zone: eu-west-1c
  topology:
    bastion:
      bastionPublicName: bastion-eddy.eu.sbx.kube.intapp.com
    dns:
      type: Public
    masters: private
    nodes: private
  additionalPolicies:
    node: |
      [
        {
          "Sid": "ClusterNodeAutoScaling",
          "Effect": "Allow",
          "Action": [
            "autoscaling:DescribeAutoScalingGroups",
            "autoscaling:DescribeAutoScalingInstances",
            "autoscaling:SetDesiredCapacity",
            "autoscaling:DescribeLaunchConfigurations",
            "autoscaling:DescribeTags",
            "autoscaling:TerminateInstanceInAutoScalingGroup"
          ],
          "Resource": ["*"]
        }
      ]
  # ! alpha feature
  fileAssets:
  - name: audit-log
    # Note if not path is specificied the default path it /srv/kubernetes/assets/<name>
    path: /srv/kubernetes/audit.yaml
    roles: [Master] # a list of roles to apply the asset to, zero defaults to all [Master,Node,Bastion]
    content: |
      apiVersion: audit.k8s.io/v1beta1 # This is required.
      kind: Policy
      # Don't generate audit events for all requests in RequestReceived stage.
      omitStages:
        - "RequestReceived"
      rules:
        # Log pod changes at RequestResponse level
        - level: RequestResponse
          resources:
          - group: ""
            # Resource "pods" doesn't match requests to any subresource of pods,
            # which is consistent with the RBAC policy.
            resources: ["pods"]
        # Log "pods/log", "pods/status" at Metadata level
        - level: Metadata
          resources:
          - group: ""
            resources: ["pods/log", "pods/status"]

        # Don't log requests to a configmap called "controller-leader"
        - level: None
          resources:
          - group: ""
            resources: ["configmaps"]
            resourceNames: ["controller-leader"]

        # Don't log watch requests by the "system:kube-proxy" on endpoints or services
        - level: None
          users: ["system:kube-proxy"]
          verbs: ["watch"]
          resources:
          - group: "" # core API group
            resources: ["endpoints", "services"]

        # Don't log authenticated requests to certain non-resource URL paths.
        - level: None
          userGroups: ["system:authenticated"]
          nonResourceURLs:
          - "/api*" # Wildcard matching.
          - "/version"

        # Log the request body of configmap changes in kube-system.
        - level: Request
          resources:
          - group: "" # core API group
            resources: ["configmaps"]
          # This rule only applies to resources in the "kube-system" namespace.
          # The empty string "" can be used to select non-namespaced resources.
          namespaces: ["kube-system"]

        # Log configmap and secret changes in all other namespaces at the Metadata level.
        - level: Metadata
          resources:
          - group: "" # core API group
            resources: ["secrets", "configmaps"]

        # Log all other resources in core and extensions at the Request level.
        - level: Request
          resources:
          - group: "" # core API group
          - group: "extensions" # Version of group should NOT be included.

        # A catch-all rule to log all other requests at the Metadata level.
        - level: Metadata
          # Long-running requests like watches that fall under this rule will not
          # generate an audit event in RequestReceived.
          omitStages:
            - "RequestReceived"
---

apiVersion: kops/v1alpha2
kind: InstanceGroup
metadata:
  creationTimestamp: null
  labels:
    kops.k8s.io/cluster: eddy.eu.sbx.kube.intapp.com
  name: master-eu-west-1a
spec:
#  image: kope.io/k8s-1.8-debian-jessie-amd64-hvm-ebs-2018-02-08
  image: kope.io/k8s-1.10-debian-jessie-amd64-hvm-ebs-2018-08-17
  machineType: t2.medium
  maxSize: 1
  minSize: 1
  nodeLabels:
    kops.k8s.io/instancegroup: master-eu-west-1a
  role: Master
  rootVolumeSize: 64
  subnets:
  - eu-west-1a

#---
#
#apiVersion: kops/v1alpha2
#kind: InstanceGroup
#metadata:
#  creationTimestamp: null
#  labels:
#    kops.k8s.io/cluster: eddy.eu.sbx.kube.intapp.com
#  name: master-eu-west-1b
#spec:
##  image: kope.io/k8s-1.8-debian-jessie-amd64-hvm-ebs-2018-02-08
#  image: kope.io/k8s-1.10-debian-jessie-amd64-hvm-ebs-2018-08-17
#  machineType: t2.medium
#  maxSize: 1
#  minSize: 1
#  nodeLabels:
#    kops.k8s.io/instancegroup: master-eu-west-1b
#  role: Master
#  rootVolumeSize: 64
#  subnets:
#  - eu-west-1b
#
#---
#
#apiVersion: kops/v1alpha2
#kind: InstanceGroup
#metadata:
#  creationTimestamp: null
#  labels:
#    kops.k8s.io/cluster: eddy.eu.sbx.kube.intapp.com
#  name: master-eu-west-1c
#spec:
##  image: kope.io/k8s-1.8-debian-jessie-amd64-hvm-ebs-2018-02-08
#  image: kope.io/k8s-1.10-debian-jessie-amd64-hvm-ebs-2018-08-17
#  machineType: t2.medium
#  maxSize: 1
#  minSize: 1
#  nodeLabels:
#    kops.k8s.io/instancegroup: master-eu-west-1c
#  role: Master
#  rootVolumeSize: 64
#  subnets:
#  - eu-west-1c

---

apiVersion: kops/v1alpha2
kind: InstanceGroup
metadata:
  creationTimestamp: null
  labels:
    kops.k8s.io/cluster: eddy.eu.sbx.kube.intapp.com
  name: nodes
spec:
#  image: kope.io/k8s-1.8-debian-jessie-amd64-hvm-ebs-2018-02-08
  image: kope.io/k8s-1.10-debian-jessie-amd64-hvm-ebs-2018-08-17
  machineType: t2.small
  maxSize: 4
  minSize: 2
  nodeLabels:
    kops.k8s.io/instancegroup: nodes
  role: Node
  rootVolumeSize: 124
  subnets:
  - eu-west-1a
  - eu-west-1b
  - eu-west-1c

---

apiVersion: kops/v1alpha2
kind: InstanceGroup
metadata:
  creationTimestamp: null
  labels:
    kops.k8s.io/cluster: eddy.eu.sbx.kube.intapp.com
  name: bastions
spec:
#  image: kope.io/k8s-1.8-debian-jessie-amd64-hvm-ebs-2018-02-08
  image: kope.io/k8s-1.10-debian-jessie-amd64-hvm-ebs-2018-08-17
  machineType: t2.micro
  maxSize: 1
  minSize: 1
  nodeLabels:
    kops.k8s.io/instancegroup: bastions
  role: Bastion
  subnets:
  - utility-eu-west-1a
  - utility-eu-west-1b
  - utility-eu-west-1c
